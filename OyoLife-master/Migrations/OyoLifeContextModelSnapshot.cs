// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OyoLife.Data;

namespace OyoLife.Migrations
{
    [DbContext(typeof(OyoLifeContext))]
    partial class OyoLifeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OyoLife.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Line1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Line2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PGId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PGId")
                        .IsUnique();

                    b.ToTable("Address");
                });

            modelBuilder.Entity("OyoLife.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BookingStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Booking_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Booking_Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DealerId")
                        .HasColumnType("int");

                    b.Property<int>("PGId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DealerId");

                    b.HasIndex("UserId");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("OyoLife.Models.BookingAvailability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DealerId")
                        .HasColumnType("int");

                    b.Property<int>("No_Of_Bookings")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BookingAvailabilities");
                });

            modelBuilder.Entity("OyoLife.Models.Dealer", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Dealer_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dealer_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dealer_Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dealer_PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dealer_age")
                        .HasColumnType("int");

                    b.Property<string>("Dealer_gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PerDay_DealingCapacity")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dealer");
                });

            modelBuilder.Entity("OyoLife.Models.Facility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Facility_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PGId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PGId");

                    b.ToTable("Facilities");
                });

            modelBuilder.Entity("OyoLife.Models.PG", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("About_Pg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DealerId")
                        .HasColumnType("int");

                    b.Property<string>("Pg_Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pg_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Pg_Price")
                        .HasColumnType("float");

                    b.Property<string>("Pg_Sharing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pg_Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DealerId");

                    b.ToTable("PG");
                });

            modelBuilder.Entity("OyoLife.Models.PgImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image_Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PGId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PGId");

                    b.ToTable("PgImages");
                });

            modelBuilder.Entity("OyoLife.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("user_age")
                        .HasColumnType("int");

                    b.Property<string>("user_gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("OyoLife.Models.Address", b =>
                {
                    b.HasOne("OyoLife.Models.PG", "PG")
                        .WithOne("Pg_Address")
                        .HasForeignKey("OyoLife.Models.Address", "PGId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OyoLife.Models.Booking", b =>
                {
                    b.HasOne("OyoLife.Models.Dealer", "Dealer")
                        .WithMany("Bookings")
                        .HasForeignKey("DealerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OyoLife.Models.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OyoLife.Models.Facility", b =>
                {
                    b.HasOne("OyoLife.Models.PG", "PG")
                        .WithMany("Facilities")
                        .HasForeignKey("PGId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OyoLife.Models.PG", b =>
                {
                    b.HasOne("OyoLife.Models.Dealer", "Dealer")
                        .WithMany("PGs")
                        .HasForeignKey("DealerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OyoLife.Models.PgImage", b =>
                {
                    b.HasOne("OyoLife.Models.PG", "PG")
                        .WithMany("PgImages")
                        .HasForeignKey("PGId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
